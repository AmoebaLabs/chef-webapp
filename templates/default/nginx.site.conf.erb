## NOTE: THIS FILE IS MANAGED BY CHEF. CHANGES TO THIS FILE WILL BE REMOVED THE NEXT CHEF RUN. IF
#  YOU WISH TO MAKE A MODIFICATION, YOU SHOULD DO SO IN THE CHEF KITCHEN FOR THIS SERVER AND RUN:
#  `amoeba node push --node <%= node[:name] %>`

<% if app[:type].match /unicorn/i %>
# Listen on Application Socket
upstream <%= app[:name] %> {
  server unix:<%= app[:unicorn][:socket] %> fail_timeout=0;
}
<% end %>

<% if app.redirect_urls.length > 0 %>
# Redirect URL Aliases
<% app.redirect_urls.each do |url| %>
server {
  listen        80;
  server_name   <%= url %>;
  return  301   http://<%= app.url %>$request_uri;
}
<% end; end %>

<% if node[:application][:ssl][:force] %>
# Force SSL for this application
server {
  server_name <%= app.url %>;
  listen       80;
  return  301  https://$host$request_uri;
}
<% end %>

# Serve Application
server {
  <% if app[:type].match /(passenger|rails)/i %>
  # Application Server Config (Passenger)
  passenger_ruby    <%= node[:application][:ruby_wrapper] %>;
  passenger_app_env <%= node[:application][:environment] %>;
  passenger_enabled on;
  <% end %>

  # Some sensible defaults for a Web Application server
  listen            80;
  underscores_in_headers on;
  sendfile          on;
  gzip              on;
  keepalive_timeout <%= node[:application][:nginx][:keepalive_timeout] %>;

  # Main URL
  server_name <%= app.url %>;

  # Alias URLs
  <% app.alias_urls.each do |url| %>
  server_name <%= url %>;
  <% end %>

  <% if node[:application][:ssl][:enabled] %>
  # Also some SSL directives:
  listen 443 ssl;
  ssl_certificate /etc/ssl/public/<%= node[:application][:ssl][:cert_name] %>-chained.pem;
  ssl_certificate_key /etc/ssl/private/<%= node[:application][:ssl][:cert_name] %>.key;
  <% end %>

  # Serve static files
  root <%= app.static_path %>;

  # Error pages
  error_page 500 502 503 504 /500.html;
  error_page 422 /422.html;
  error_page 404 /404.html;

  <% if app[:type].match /unicorn/i %>
  location / {
    try_files $uri @app;
  }

  # Proxy to app via unix socket
  location @app {
    proxy_pass http://<%= app.name %>;
    proxy_redirect off;

    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
  }
  <% end %>

  <% if app[:http_auth] %>
  location <%= app.http_auth.realm %> {
    auth_basic            "Restricted";
    auth_basic_user_file  htpasswd;
  }
  <% app.http_auth.exclude.each do |exclude_url| %>
  location <%= exclude_url %> {
    auth_basic off;
  }
  <% end; end %>
}
